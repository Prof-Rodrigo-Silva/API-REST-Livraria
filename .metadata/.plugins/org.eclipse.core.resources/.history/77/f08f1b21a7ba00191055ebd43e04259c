package com.project.socialbooks.resources;


import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.project.socialbooks.domain.Livro;
import com.project.socialbooks.repository.LivrosRepository;

import jdk.net.SocketFlow.Status;

@RestController
@RequestMapping("/livros")
public class LivrosResources {
	
	
	@Autowired
	private LivrosRepository livrosRepository;
	
	@RequestMapping(method = RequestMethod.GET)
	public List<Livro> listar (){
		
		return livrosRepository.findAll();
	}
	@RequestMapping(method = RequestMethod.POST)
	public void salva(@RequestBody Livro livro) {
		livrosRepository.save(livro);
		
	}
	@RequestMapping(value = "/{id}",method = RequestMethod.GET)
	public ResponseEntity<?> buscar(@PathVariable("id") Long id) {
		Livro livro = this.livrosRepository.findById(id).orElse(null);
		
		if(livro == null) {
			return ResponseEntity.notFound().build();
			
		}
		
		return ResponseEntity.status(HttpStatus.OK).body(livro);
	}
	@RequestMapping(value = "/{id}",method = RequestMethod.DELETE)
	public void deletar(@PathVariable("id") Long id) {
		livrosRepository.deleteById(id);	
	}
	@RequestMapping(value = "/{id}", method = RequestMethod.PUT)
	public void atualizar(@RequestBody Livro livro, @PathVariable("id") Long id) {
		livro.setId(id);
		livrosRepository.save(livro);
	}

}
